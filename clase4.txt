Display en CSS

Todos los elementos en CSS son cuadrados o rectángulos y aparte de eso, estos elementos tienen un comportamiento que se define a través de la propiedad display. Los display más comunes y usados son: block, inline, inline-block, none, table, flex y grid. Veamos de qué se tratan:

Block: Quiero que pensemos en este display como el flujo que tenemos cada vez que escribimos. Por ejemplo, nosotros escribimos de izquierda a derecha, pero cuando se nos acaba el espacio horizoltalmente, seguimos abajo. Este es el flujo de bloque en nuestra escritura (de arriba a abajo) y es exactamente el que obedece display block, lo que quiere decir que los elementos se visualizan uno debajo del otro.Algunos elementos que por defecto tienen este tipo de display son: <div>, <p>, <h1>, <section>, y <ul>.

Inline: Quiero que pensemos en este display como la linea base que seguimos para escribir, que en el caso del latin, es de izquierda a derecha. Por la tanto, todos los elementos en este display se visualizaran uno al lado del otro de izquierda a derecha. Algunos elementos que por defecto tiene este tipo de display son: <span>, <em>, y <b>

Inline-block: Este display es muy similar al display inline, sin embargo este respeta el width y el heigth que se le asigne a los elementos

None: Este display es utilizado para ocultar elementos sin eliminarlos por completo del DOM

Table: Los elemntos con este display se comportan como los elemntos <table>

Flex: Centar elementos, aliniarlos a la derecha o a la izquierda, siempre han sido una tarea facil. Sin embargo llega flexbox para ayudarnos con este dilema. Para usar flexbox es indispensable la propiedad display: flex en el elemento padre que por defecto alineara a los elementos hijos de izquierda a derecha. Tambien este display suele acompañarse por otras propiedades como jutify-center y align-items. Tambien con flexbox no basta solo con escribir display: flex tambien es muy importante que entendamos como funciona y para ello te dejo la siguiente documentacion: https://css-tricks.com/snippets/css/a-guide-to-flexbox/

Grid: Despues de flexbox, llega el mas poderoso sistema de layout: CSS Grid y para implemntarlo debemos hacer uso de display: grid en el elemto contenedor o elemto padre. Al igual que con flexbox, CSS Grid requiere de un estudio adicional ya que no basta con colocar este display. Para ello, te dejo la siguiente guia:
https://css-tricks.com/snippets/css/complete-guide-grid/